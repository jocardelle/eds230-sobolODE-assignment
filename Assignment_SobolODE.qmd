---
title: "Using Sobol with an ODC"
author: "Josephine Cardelle"
format: html
editor_options: 
  chunk_output_type: console
execute: 
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(deSolve)
library(sensitivity)
library(here)
```

```{r}
source(here("forest_growth.R"))
```

### Run model for 300 years
```{r}
# recall ODE needs ALL of our parameters in a single list
# initial population and times for which we want output
Cinitial <- c(C = 10)

# gets results for 200 years (evaluating every year)
simtimes <- seq(from = 1, to = 300)
parms <- list(r = 0.01, K = 250, g = 2, thresh = 50)

result <- ode(y = Cinitial, time = simtimes, func = dforestgrowth, parms = parms)
result <- as.data.frame(result)

```


### Graph the results
```{r}
ggplot(result, aes(time, C)) +
  geom_line() +
  geom_hline(yintercept = 50, col = "red") +
  labs(y = "Forest Size (C)", x = "time (years)", title = "Forest Growth model over 300 years")
```


### Run a sobol global sensitivity analysis
```{r}
# first set of samples
np <- 2000
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 2, sd =0.2 , n = np)
thresh <- rnorm(mean = 50, sd = 5, n = np)

X1 <- cbind.data.frame(r = r, K = K, g = g, thresh = thresh)

# repeat for second set of samples
K <- rnorm(mean = 250, sd = 25, n = np)
r <- rnorm(mean = 0.01, sd = 0.001, n = np)
g <- rnorm(mean = 2, sd =0.2 , n = np)
thresh <- rnorm(mean = 50, sd = 5, n = np)

X2 <- cbind.data.frame(r = r, K = K, g = g, thresh = thresh)

# fix any negative values
X1 <- X1 %>% map_df(pmax, 0.0)
X2 <- X2 %>% map_df(pmax, 0.0)

# create our sobol object and get sets of parameters for running the model
sens_C <- sobolSalt(model = NULL, X1, X2, nboot = 300)

# lets add names
colnames(sens_C$X) <- c("r", "K", "g", "thresh")

# Max forest size function
max_C <- function(params) {
  parms <- list(
    r = params[1],
    K = params[2],
    g = params[3],
    thresh = params[4]
  )
  Cinitial <- c(C = 10)
  simtimes <- seq(from = 1, to = 300)
  result <- ode(y = Cinitial, time = simtimes, func = dforestgrowth, parms = parms)
  result <- as.data.frame(result)
  return(max(result$C))
}

# Apply function to param sets in sobol samples
y <- apply(sens_C$X, 1, max_C)

# Print sobol indices
sens_C <- tell(sens_C, y)

print("First-order Sobol indices (S):")
print(sens_C$S$original)

print("Total-effect Sobol indices (T):")
print(sens_C$T$original)
```


### Graph the results as a box plot
```{r}
# Get max forest size values
max_forest <- sens_C$y

# Box plot of max forest size with varied parameters
ggplot() + 
  geom_boxplot(aes(y = max_forest, x = "")) +
  labs(title = "Sensitivity Analysis of Max Forest Size",
       y = "Maximum Forest Size (C)")+
  theme_minimal()
```





